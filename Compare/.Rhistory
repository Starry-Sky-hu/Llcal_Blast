for(i in seq(0.5,16,3)){
abline(v=i,lty=1,col=rgb(0,0,0,1))
}
legend_name <- sapply(strsplit(my_plot$names,'\\.'),function(x) x[[1]])
legend_name <- legend_name[c(1,2,3)]
legend("topleft",legend=legend_name,bty = 'n',pch=15,pt.cex=2,cex=0.8,inset=c(0.05,0),
col=c(rgb(0.9,0.9,0.5,0.6),rgb(0,0.7,0.5,0.6),rgb(0.1,0.2,0.7,0.6)))
hot_gene <- data.frame(hot_cold$a,paste(hot_cold$c,".",hot_cold$b,sep = ""))
colnames(hot_gene) <- c("num","type")
library(multcompView)
model <- aov(num~type,hot_gene)
summary(model)
library(agricolae)
out <- LSD.test(model,"type",p.adj="none")
out$group
lever_label <- data.frame(rownames(out$groups),out$groups$groups)
colnames(lever_label) <- c("type","lever")
library("plyr")
names <- as.data.frame(my_plot$names)
colnames(names) <- "type"
letter <- merge(names,lever_label,by="type",all=T)
letter <- cbind(letter,sapply(strsplit(letter$type,'\\.'),function(x) x[[2]]))
colnames(letter) <- c('type','lever','order')
letter <- letter[order(letter$order),]
#text(x=seq(0.7,15),y=my_plot$stats[5,]+1,letter$lever,cex=0.8,col=19)
text(x=seq(1,15),y=my_plot$stats[5,]+0.5,paste("n=",my_plot$n,' ',letter$lever,sep=""),cex=0.6,col="red")
for(i in 1:length(my_plot$n)){
my_jitter <- jitter(rep(i,my_plot$n[i]),amount=0.3)
this_level <- subset(subset(hot_cold,b==strsplit(my_plot$names,'\\.')[[i]][2]),
c==strsplit(my_plot$names,'\\.')[[i]][1])$a
points(my_jitter,this_level,pch=19,cex=0.2,col=rgb(0,0,0,0.8))
}
hot_gene <- data.frame(hot_cold$a,paste(hot_cold$c,".",hot_cold$b,sep = ""))
colnames(hot_gene) <- c("num","type")
library(multcompView)
model <- aov(num~type,hot_gene)
summary(model)
library(agricolae)
out <- LSD.test(model,"type",p.adj="none")
out$group
lever_label <- data.frame(rownames(out$groups),out$groups$groups)
colnames(lever_label) <- c("type","lever")
dev.off()
library(vioplot)
library(vioplot)
treatment <- c(rep(c("a","b","c"),each=40))
value <- c(sample(1:7,40,replace=T),sample(3:5,40,replace=T),sample(4:9,40,replace = T))
data <- data.frame(treatment,value)
with(data,vioplot(
value[treatment=="a"],value[treatment=="b"],value[treatment=="c"],
col=rgb(0,0,0,1),names=c("a","b","c")
))
vioplot(
value[treatment=="a"],value[treatment=="b"],value[treatment=="c"],
col=rgb(0,0,0,1),names=c("a","b","c"))
value[treatment=="a"]
value
value[a]
value["a"]
treatment=="a"
vioplot(value)
vioplot(
value[treatment=="a"],value[treatment=="b"],value[treatment=="c"],
names=c("a","b","c"))
runif(11,0.4)
runif(11,0.4)
a <- seq(1,2,0.1) + 4*runif(11,0.4)
b <- seq(1,2,0.1)^2 + runif(11,0.98)
my_sceen_step1 <- split.screen(c(2,1))
screen(my_sceen_step1[1])
plot(a,b,pch=20,xlab = "value of x",ylab="value of y",cex = 1,col = rgb(0,0,1,0.5),xlim=c(1,6),ylim=c(1,6))
close.screen(all=TRUE) #閫€鍑哄垎鍓茬敾闈㈢殑妯″紡
close.screen(all=TRUE) #閫€鍑哄垎鍓茬敾闈㈢殑妯″紡
my_sceen_step1 <- split.screen(c(2,1))
screen(my_sceen_step1[1])
plot(a,b,pch=20,xlab = "value of x",ylab="value of y",cex = 1,col = rgb(0,0,1,0.5),xlim=c(1,6),ylim=c(1,6))
plot(a,b,pch=20,xlab = "value of x",ylab="value of y",cex = 1,col = rgb(0,0,1,0.5),xlim=c(1,6),ylim=c(1,6))
my_sceen_step2 <- split.screen(c(1,2),screen = my_sceen_step1[2])
screen(my_sceen_step2[1])
hist(a,border = F,col=rgb(0.2,0.3,0.4,0.5),cex=1,pch=15,xlab = "distrubution of a")
screen(my_sceen_step2[2])
hist(b,border = F,col=rgb(0.1,0.2,0.3,0.4),main = "a",sub="hist",xlab = "distrubution of b")
library(paletteer)
nColor <- 20
colors <- paletteer_c(package = "viridis", palette = "inferno", n = nColor)
install.packages("viridis")
library(paletteer)
nColor <- 20
colors <- paletteer_c(package = "viridis", palette = "inferno", n = nColor)
colors <- paletteer_c("viridis,inferno", n = nColor)
colors <- paletteer_c("viridis::inferno", n = nColor)
rank <- as.factor( as.numeric( cut(iris$Petal.Width, nColor)))
plot(x = iris$Petal.Length, y = iris$Petal.Width,bg = colors[ rank ],
cex = 3,pch=21)
close.screen()
close.screen()
plot(x = iris$Petal.Length, y = iris$Petal.Width,bg = colors[ rank ],
cex = 3,pch=21)
plot(x = iris$Petal.Length, y = iris$Petal.Width,bg = colors[ rank ],
cex = 3,pch=21)
?plot
colors[ rank ]
plot(x = iris$Petal.Length, y = iris$Petal.Width,
cex = 3,pch=21)
plot(x = iris$Petal.Length, y = iris$Petal.Width,col = colors[ rank ],
cex = 3,pch=21)
plot(x = iris$Petal.Length, y = iris$Petal.Width,bg = colors[ unclass(iris$Species) ],
cex = 3,pch=21)
plot(x = iris$Petal.Length, y = iris$Petal.Width,col = colors[ rank ],
cex = 3,pch=20)
plot(x = iris$Petal.Length, y = iris$Petal.Width,col = colors[ rank ],
cex = 3,pch=26)
plot(x = iris$Petal.Length, y = iris$Petal.Width,col = colors[ rank ],
cex = 3,pch=26)
plot(x = iris$Petal.Length, y = iris$Petal.Width,col = colors[ rank ],
cex = 3,pch=22)
iris$Species
type(iris$Species)
class(iris$Species)
?unclass
unclass(iris$Species)
.Primitive("sqrt")
.Primitive("typw")
.Primitive("type")
data.class()
data.class(x)
View(data)
data.class(value)
unclass(iris$Species)
?cut
?cut(10,2)
cut(10,2)
cut(c(1:10),2)
cut(c(1:10),5)
x <- runif(300, min=-10, max=10)
y <- 0.1*x^3 - 0.5 * x^2 - x + 10 + rnorm(length(x),0,8)
jpeg(file = "Scatter3.jpg",width = 7000,height = 7000,res = 1000)
plot(x,y,cex=0.5,col=rgb(0.1,0.3,0.6,0.8),pch=17)
dev.off()
dev.off()
plot(x,y,cex=0.5,col=rgb(0.1,0.3,0.6,0.8),pch=17)
model <- lm(y ~ x + I(x^2) + I(x^3))
summary(model)
ix <- sort(x,index.return=T)$ix
sort(x,index.return=T)
round(0.2312,2)
round(0.236,2)
floor(0.3)
floor(0.9)
ceiling(0.3)
a <- c(1,2,3,8,3,8,8,8,5,8,8,13,4,8,8)
b <- c(1,3,6,6,6,2,8,6,7,6,6,3,19,1,1)
AA <- xyTable(a,b)
AA
?brewer.pal
library(RColorBrewer)
?brewer.pal
set.seed(124)
date <- paste("2015/03/",sample(seq(1,31),6),sep="")
date
data <- data.frame(date,value)
value <- sample(seq(1,100),6)
data <- data.frame(date,value)
data$date <- as.Date(data$date)
View(data)
data <- data.frame(date,value)
set.seed(124)
date <- paste("2015/03/",sample(seq(1,31),6),sep="")
value <- sample(seq(1,100),6)
data <- data.frame(date,value)
data$date <- as.Date(data$date)
plot(data$date,data$value,type="b")
jpeg(file = "Pie1.jpg",width = 7000,height = 7000,res = 1000)
plot(data$value~data$date,type="b")
dev.off()
data <- data[order(data$date),]
jpeg(file = "date2.jpg",width = 7000,height = 7000,res = 1000)
plot(data$value~data$date , type="b" , lwd=3 , col=rgb(0.1,0.7,0.1,0.8) ,
ylab="value of ..." , xlab="date" , bty="l" , pch=20 , cex=4)
abline(h=seq(0,100,10) , col="grey", lwd=0.8)
dev.off()
dev.off()
plot(data$value~data$date , type="b" , lwd=3 , col=rgb(0.1,0.7,0.1,0.8) ,
ylab="value of ..." , xlab="date" , bty="l" , pch=20 , cex=4)
abline(h=seq(0,100,10) , col="grey", lwd=0.8)
plot(b~a,type="b",bty="l",xlab="value of a",ylab="value of b",col=rgb(0.2,0.3,0.6,0.7),
lwd=3,pch=17,ylim=c(1,6))
a <- c(1:5)
b <- c(5,3,4,5,5)
c <- c(4,5,4,3,1)
jpeg(file = "Scatterplot5.jpg",width = 7000,height = 7000,res = 1000)
dev.off()
dev.off()
plot(b~a,type="b",bty="l",xlab="value of a",ylab="value of b",col=rgb(0.2,0.3,0.6,0.7),
lwd=3,pch=17,ylim=c(1,6))
lines(c~a,col=rgb(0.8,0.4,0.1,0.7),lwd=3,pch=19,type="b")
plot(1:2,type = 'n',main="",xlab = "x",ylab = "y")
lim <- par()
rasterImage(my_image,xleft = 1,xright = 2,ybottom = 1.3,ytop=1.7)
grid()
lines(x=c(1, 1.2, 1.4, 1.6, 1.8, 2.0), y=c(1, 1.3, 1.7, 1.6, 1.7, 1.0),
type="b", lwd=5, col="black")
download.file(
"https://www.r-graph-gallery.com/120-plot-with-an-image-as-background_files/figure-html/thecode-1.png" ,
destfile="tmp.png")
library(jpeg)
library(png)
my_image <- readPNG("tmp.png")
plot(1:2,type = 'n',main="",xlab = "x",ylab = "y")
lim <- par()
rasterImage(my_image,xleft = 1,xright = 2,ybottom = 1.3,ytop=1.7)
my_image <- readPNG("tmp.png")
my_image <- readPNG("tmp.png")
data <- data.frame(name=letters[1:5],value=sample(seq(4:15),5))
jpeg(file = "barplot1.jpg",width = 7000,height = 7000,res = 1000)
my_screen <- split.screen(c(2,2))
par(mfrow=c(2,2))
barplot(height = data$value,names=data$name)
barplot(height = data$value,names=data$name,col=rgb(0.1,0.2,0.3,0.4))
library(RColorBrewer)
coul <- brewer.pal(5,"Set2")
barplot(height = data$value,names=data$name,col=coul)
dev.off()
jpeg(file = "barplot2.jpg",width = 7000,height = 7000,res = 1000)
par(mfrow=c(2,2))
barplot(height = data$value,names=data$name,col="white",border = "black")
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=1,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="blue",space = c(1:5))
barplot(height = data$value,names=data$name,col="blue",space = 2,
angle = c(sample(1:100,5)),density=c(sample(1:100,5)))
dev.off()
my_screen <- split.screen(c(2,2))
dev.off()
dev.off()
my_screen <- split.screen(c(2,2))
par(mfrow=c(2,2))
barplot(height = data$value,names=data$name)
barplot(height = data$value,names=data$name,col=rgb(0.1,0.2,0.3,0.4))
library(RColorBrewer)
coul <- brewer.pal(5,"Set2")
barplot(height = data$value,names=data$name,col=coul)
dev.off()
jpeg(file = "barplot2.jpg",width = 7000,height = 7000,res = 1000)
par(mfrow=c(2,2))
dev.off()
dev.off()
barplot(height = data$value,names=data$name)
barplot(height = data$value,names=data$name,col=rgb(0.1,0.2,0.3,0.4))
library(RColorBrewer)
coul <- brewer.pal(5,"Set2")
barplot(height = data$value,names=data$name,col=coul)
my_screen <- split.screen(c(2,2))
par(mfrow=c(2,2))
barplot(height = data$value,names=data$name)
barplot(height = data$value,names=data$name,col=rgb(0.1,0.2,0.3,0.4))
library(RColorBrewer)
dev.off()
dev.off()
my_screen <- split.screen(c(2,2))
par(mfrow=c(2,2))
barplot(height = data$value,names=data$name)
barplot(height = data$value,names=data$name,col=rgb(0.1,0.2,0.3,0.4))
library(RColorBrewer)
coul <- brewer.pal(5,"Set2")
barplot(height = data$value,names=data$name,col=coul)
par(mfrow=c(2,2))
barplot(height = data$value,names=data$name,col="white",border = "black")
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=1,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="blue",space = c(1:5))
barplot(height = data$value,names=data$name,col="blue",space = 2,
angle = c(sample(1:100,5)),density=c(sample(1:100,5)))
dev.off()
data <- data.frame(name=letters[1:5],value=sample(seq(4:15),5))
#my_screen <- split.screen(c(2,2))
par(mfrow=c(2,2))
barplot(height = data$value,names=data$name)
barplot(height = data$value,names=data$name,col=rgb(0.1,0.2,0.3,0.4))
library(RColorBrewer)
coul <- brewer.pal(5,"Set2")
barplot(height = data$value,names=data$name,col=coul)
par(mfrow=c(2,2))
barplot(height = data$value,names=data$name,col="white",border = "black")
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=1,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="blue",space = c(1:5))
barplot(height = data$value,names=data$name,col="blue",space = 2,
angle = c(sample(1:100,5)),density=c(sample(1:100,5)))
dev.off()
barplot(height = data$value,names=data$name)
barplot(height = data$value,names=data$name,col=rgb(0.1,0.2,0.3,0.4))
coul <- brewer.pal(5,"Set2")
barplot(height = data$value,names=data$name,col=coul)
barplot(height = data$value,names=data$name,col="white",border = "black")
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=1,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=10,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=2,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=2,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=4,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=0,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="red",main="my title",xlab = "categories",
ylab = "values",ylim=c(0,40),horiz = T,las=1,
width = c(1:5),space = c(seq(0,2,0.5)))
barplot(height = data$value,names=data$name,col="blue",space = c(1:5))
barplot(height = data$value,names=data$name,col="blue",space = 2,
angle = c(sample(1:100,5)),density=c(sample(1:100,5)))
barplot(height = data$value,names=data$name,col="blue",space = c(1:5))
h <- hist(mtcars$mpg,breaks = 25 , col="red")
x <- mtcars$mpg
h <- hist(mtcars$mpg,breaks = 25 , col="red")
x <- mtcars$mpg
xfit <- seq(min(x),max(x),length=40)
yfit <- dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit,yfit,col="blue",lwd=2)
diff(h$mids[1:2])
h$mids[1:2]
diff(h$mids[1:2])
xfit <- seq(min(x),max(x),length=40)
yfit <- dnorm(xfit,mean=mean(x),sd=sd(x))
lines(xfit,yfit,col="blue",lwd=2)
yfit <- yfit*length(x)
lines(xfit,yfit,col="blue",lwd=2)
yfit <- yfit*diff(h$mids[1:2])*length(x)
lines(xfit,yfit,col="blue",lwd=2)
xfit <- seq(min(x),max(x),length=40)
yfit <- dnorm(xfit,mean=mean(x),sd=sd(x))
yfit <- yfit*length(x)
h <- hist(mtcars$mpg,breaks = 25 , col="red")
lines(xfit,yfit,col="blue",lwd=2)
cyl.f <- factor(cyl, levels = c(4,6,8),labels = c("4 cylinder","6 cylinder","8 cylinder"))
library(sm)
attach(mtcars)
cyl.f <- factor(cyl, levels = c(4,6,8),labels = c("4 cylinder","6 cylinder","8 cylinder"))
sm.density.compare(mpg,cyl,xlab="Miles Per Gallon")
title(main='MPG Distribution by Car Cylinders')
colfill <- c(2:(2+length(levels(cyl.f))))
legend(locator(1),levels(cyl.f),fill=colfill)
sm.density.compare(mpg,cyl,xlab="Miles Per Gallon")
library(sm)
attach(mtcars)
jpeg(file = "hist3.jpg",width = 7000,height = 7000,res = 1000)
cyl.f <- factor(cyl, levels = c(4,6,8),labels = c("4 cylinder","6 cylinder","8 cylinder"))
sm.density.compare(mpg,cyl,xlab="Miles Per Gallon")
sm.density.compare(mpg,cyl,xlab="Miles Per Gallon")
dev.off()
sm.density.compare(mpg,cyl,xlab="Miles Per Gallon")
my_variable=c(rnorm(1000,0,2),rnorm(1000,9,2))
n <- layout(mat = matrix(c(1,2),2,1,byrow = TRUE),heights = c(1,8))
layout.show(n)
n <- layout(mat = matrix(c(1,2),2,1,byrow = TRUE),heights = c(2,8))
layout.show(n)
matrix(c(1,2),2,1,byrow = TRUE)
matrix(c(1,2),2,1)
matrix(c(1,2),2,1,byrow = F)
boxplot(my_variable , horizontal = TRUE , ylim=c(-10,20) , xaxt = "n" ,
col = rgb(0.9,0.8,0,0.3) , frame = F)
boxplot(my_variable , horizontal = TRUE , ylim=c(-10,20) , xaxt = "n" ,
col = rgb(0.9,0.8,0,0.3) , frame = F)
my_variable=c(rnorm(1000,0,2),rnorm(1000,9,2))
n <- layout(mat = matrix(c(1,2),2,1,byrow = TRUE),heights = c(2,8))
layout.show(n)
par(mar=c(0 , 3.1 , 1.1 , 2.1))
boxplot(my_variable , horizontal = TRUE , ylim=c(-10,20) , xaxt = "n" ,
col = rgb(0.9,0.8,0,0.3) , frame = F)
par(mar = c(1 , 1 , 1 , 10))
hist(my_variable , breaks = 40 , col = rgb(0.7,0.4,0.7,0.9) , border = F ,
main = "" , xlab = "value of the variable" , xlim = c(-10,20))
names <- c(rep("A",80) , rep("B" , 50) , rep("C" , 70))
value <- c(rnorm(80,10,9),rnorm(50,2,15),rnorm(70,3,10))
data <- data.frame(names,value)
boxplot(data$value ~ data$names,col=terrain.colors(5))
boxplot(data$value ~ data$names,col=terrain.colors(5))
data[,1]
sapply(data[,1],as.factor)
summary(data$names)
summary(data$names)/nrow(data)
data$names <- sapply(data[,1],as.factor)
my_levels <- levels(data$names)
levelProportions <- summary(data$names)/nrow(data)
summary(data$names)/nrow(data)
type(levelProportions)
typeof(levelProportions)
class(levelProportions)
hot_cold <- read.table("hot_cold_genenumber.txt" , header = F)
colnames(hot_cold) <- c("a","b","c")
summary(hot_cold)
hot_cold$b <- as.factor(hot_cold$b)
hot_cold$c <- as.factor(hot_cold$c)
hot <- subset(hot_cold,c=="hot")
cold <- subset(hot_cold,c=="cold")
simulated <- subset(hot_cold,c=="simulated")
#new_order <- with(hot_cold,reorder(b,a,mean))
my_plot <- boxplot(a~c*b,data=hot_cold,ylab="Number",xlab=" ",ylim=c(0,30),xaxt="n",
col=c(rgb(0.9,0.9,0.5,0.6),rgb(0,0.7,0.5,0.6),rgb(0.1,0.2,0.7,0.6)))
my_name <- sapply(strsplit(my_plot$names,'\\.'),function(x) x[[2]])
my_name <- my_name[seq(1,length(my_name),3)]
axis(side = 1,at=seq(2,16,3),labels=my_name)
for(i in seq(1.5,15,1)){
abline(v=i,lty=3,col="grey")
}
for(i in seq(0.5,16,3)){
abline(v=i,lty=1,col=rgb(0,0,0,1))
}
legend_name <- sapply(strsplit(my_plot$names,'\\.'),function(x) x[[1]])
legend_name <- legend_name[c(1,2,3)]
legend("topleft",legend=legend_name,bty = 'n',pch=15,pt.cex=2,cex=0.8,inset=c(0.05,0),
col=c(rgb(0.9,0.9,0.5,0.6),rgb(0,0.7,0.5,0.6),rgb(0.1,0.2,0.7,0.6)))
hot_gene <- data.frame(hot_cold$a,paste(hot_cold$c,".",hot_cold$b,sep = ""))
colnames(hot_gene) <- c("num","type")
library(multcompView)
model <- aov(num~type,hot_gene)
summary(model)
library(agricolae)
out <- LSD.test(model,"type",p.adj="none")
out$group
lever_label <- data.frame(rownames(out$groups),out$groups$groups)
colnames(lever_label) <- c("type","lever")
library("plyr")
names <- as.data.frame(my_plot$names)
colnames(names) <- "type"
letter <- merge(names,lever_label,by="type",all=T)
letter <- cbind(letter,sapply(strsplit(letter$type,'\\.'),function(x) x[[2]]))
colnames(letter) <- c('type','lever','order')
letter <- letter[order(letter$order),]
#text(x=seq(0.7,15),y=my_plot$stats[5,]+1,letter$lever,cex=0.8,col=19)
text(x=seq(1,15),y=my_plot$stats[5,]+0.5,paste("n=",my_plot$n,' ',letter$lever,sep=""),cex=0.6,col="red")
for(i in 1:length(my_plot$n)){
my_jitter <- jitter(rep(i,my_plot$n[i]),amount=0.3)
this_level <- subset(subset(hot_cold,b==strsplit(my_plot$names,'\\.')[[i]][2]),
c==strsplit(my_plot$names,'\\.')[[i]][1])$a
points(my_jitter,this_level,pch=19,cex=0.2,col=rgb(0,0,0,0.8))
}
hot_gene <- data.frame(hot_cold$a,paste(hot_cold$c,".",hot_cold$b,sep = ""))
colnames(hot_gene) <- c("num","type")
library(multcompView)
model <- aov(num~type,hot_gene)
summary(model)
library(agricolae)
out <- LSD.test(model,"type",p.adj="none")
out$group
lever_label <- data.frame(rownames(out$groups),out$groups$groups)
colnames(lever_label) <- c("type","lever")
Sys.setlocale("LC_ALL","Chinese")
Sys.setlocale("LC_MESSAGES", "en_US.utf8")
Sys.setlocale("LC_MESSAGES", "en_US.utf8")
setwd("D://PP2C")
read.table("compare.table")
read.table("compare.table",header = T)
cor <- read.table("compare.table",header = T)
View(cor)
name <- ("name", 'BGV006865', 'BGV007931', 'BGV007989', 'Brandywine', 'EA00371', 'EA00990', 'Fla.8924',
'Floradade', 'Heinz' ,'LYC1410', 'M82', 'M82_MAS2.0' ,
'PAS014479' ,'PI169588' ,'PI303721', 'S_lycopersicum' 'Spenn' ,
'ZY56' ,'ZY57' ,'ZY58', 'ZY59', 'ZY60', 'ZY61', 'ZY62', 'ZY63' ,'ZY65')
name <- c("name", 'BGV006865', 'BGV007931', 'BGV007989', 'Brandywine', 'EA00371', 'EA00990', 'Fla.8924',
'Floradade', 'Heinz' ,'LYC1410', 'M82', 'M82_MAS2.0' ,
'PAS014479' ,'PI169588' ,'PI303721', 'S_lycopersicum', 'Spenn' ,
'ZY56' ,'ZY57' ,'ZY58', 'ZY59', 'ZY60', 'ZY61', 'ZY62', 'ZY63' ,'ZY65')
cor <- cbind(name,cor)
name <- c('BGV006865', 'BGV007931', 'BGV007989', 'Brandywine', 'EA00371', 'EA00990', 'Fla.8924',
'Floradade', 'Heinz' ,'LYC1410', 'M82', 'M82_MAS2.0' ,
'PAS014479' ,'PI169588' ,'PI303721', 'S_lycopersicum', 'Spenn' ,
'ZY56' ,'ZY57' ,'ZY58', 'ZY59', 'ZY60', 'ZY61', 'ZY62', 'ZY63' ,'ZY65')
cor <- cbind(name,cor)
View(cor)
write.table("PP2Ctable.table")
write.table(cor,"PP2Ctable.table")
write.table(cor,"PP2Ctable.table",sep = '\t',quote = n)
write.table(cor,"PP2Ctable.table",sep = '\t',quote = "n")
?write.table
write.table(cor,"PP2Ctable.table",sep = '\t',quote = F)
write.table(cor,"PP2Ctable.table",sep = '\t',quote = F,row.names = F)
distance <- cor$PP2C_start-cor$CDS_start
distance
distance <- cor$CDS_start-cor$PP2C_start
plot(cor$name,distance)
cor$name
length(distance)
length(cor$name)
plot(distance)
distance <- cor$CDS_start-cor$PP2C_start
cor <- cbind(name,cor)
cor <- cbind(cor,distance)
write.table(cor,"PP2Ctable.table",sep = '\t',quote = F,row.names = F)
View(cor)
cor <- read.table("compare.table",header = T)
name <- c('BGV006865', 'BGV007931', 'BGV007989', 'Brandywine', 'EA00371', 'EA00990', 'Fla.8924',
'Floradade', 'Heinz' ,'LYC1410', 'M82', 'M82_MAS2.0' ,
'PAS014479' ,'PI169588' ,'PI303721', 'S_lycopersicum', 'Spenn' ,
'ZY56' ,'ZY57' ,'ZY58', 'ZY59', 'ZY60', 'ZY61', 'ZY62', 'ZY63' ,'ZY65')
distance <- cor$CDS_start-cor$PP2C_start
cor <- cbind(name,cor)
cor <- cbind(cor,distance)
write.table(cor,"PP2Ctable.table",sep = '\t',quote = F,row.names = F)
View(cor)
